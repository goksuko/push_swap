#!/bin/bash

make && make bonus

# This script generates a random set of numbers and tests the push_swap program with them.
# It also checks the output of the program with a checker program.

# a random number between 1 to 1000 is generated to determine the size of the random numbers
random_size=$(shuf -i 1-1000 -n 1)

# If a certain size is wanted, the below line can be uncommented and the value can be changed
# random_size=100

# a list with the size of the random_size is generated by random numbers between -2000 to 2000
ARG=$(seq -2000 2000 | shuf -n $random_size)

# The generated numbers are stored in a file called tested_numbers.txt
echo $ARG >> tested_numbers.txt
# An empty line is added to separate the different tests
echo "" >> tested_numbers.txt
echo " "

# A sample of the generated numbers is printed to the console
echo $ARG
echo " "

# The push_swap program is run with the generated numbers as arguments
echo "===GOKSU SORT==="
./push_swap $ARG
echo " "
echo "===RADIX SORT==="
./push_swap "radix" $ARG
echo " "
echo "===RESULT==="
echo "number of values: "
echo $random_size
echo " "
echo "===GOKSU SORT==="

# The number of instructions used by the push_swap program is counted and printed by piping the output to wc -l
echo "instruction number: "
./push_swap $ARG | wc -l

# The output of the push_swap program is checked with the checker program to see if the numbers are sorted
echo "is sorted?: "
./push_swap $ARG | ./checker $ARG
echo " "
echo "===RADIX SORT==="
echo "instruction number: "
./push_swap "radix" $ARG | wc -l
echo "is sorted?: "
./push_swap "radix" $ARG | ./checker $ARG
